<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   xmlns:queuemachine="services.queuemachine.*"
					   xmlns:UI="UI.*"
					   width="1024" height="768" creationComplete="complete()" currentState="start"
					   initialize="init()">
	
	<fx:Script>
		<![CDATA[
			import UI.BusinessButton;
			import UI.LoadingProgressBar;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.events.*;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			
			private var progressBar:LoadingProgressBar;//读取进度条
			private var alert:Alert;//错误提示
			
			//初始化排队机第一步，最大化窗口
			private function init():void{
				this.maximize();
			}
			
			//初始化排队机第二步，排队机
			private function complete():void{
				checkTime();
			}
			
			//检查当前时间
			private function checkTime():void{
				if(isClosingTime())
					closing();
				else
					getBusinessList();
			}
			
			//判断是否为停业时间
			private function isClosingTime():Boolean{
				//TODO
				return false;
			}
			
			//停业
			private function closing():void{
				this.currentState = "closing";
			}
			
			//调用Webservice获取业务列表
			protected function getBusinessList():void
			{
				this.currentState = "loadingBusiness";
				getBusinessListResult.token = queueMachine.getBusinessList();
				getBusinessListResult.addEventListener(ResultEvent.RESULT,getBusinessListResultHandler);
			}
			
			//处理获取业务列表的结果事件，提取列表，生成菜单
			private function getBusinessListResultHandler(event:ResultEvent):void{
				var result:ArrayCollection = new ArrayCollection();
				result = event.result as ArrayCollection;
				generateMenu(result);
			}
			
			//生成业务菜单
			private function generateMenu(list:ArrayCollection):void{
				var length:int = list.length;
				if(length>0){//业务数大于0
					for(var i:int=0;i<length;i++){
						var name:String = list.getItemAt(i) as String;
						businessContainer.addElement(new BusinessButton(name));
					}
					this.currentState = "working";
				}
				else{//业务数小于或等于0，即无业务
					popAlert("当前未分配业务！");
				}
			}
			
			//弹出错误提示
			private function popAlert(message:String):void{
				this.currentState = "start";
				alert = Alert.show(message,"错误",4,this,this.nativeApplication.exit);
			}
			
			//读取业务失败处理
			private function loadBusinessFaultHander(event:FaultEvent):void{
				popAlert("网络错误！请联系管理员！");
			}
			
			//查询排队号按钮事件处理
			protected function queryQueueNo_clickHandler(event:MouseEvent):void
			{
				this.currentState = "queryQueueNoByPhone";
				queryPanel.addEventListener(FlexEvent.CREATION_COMPLETE,queryQueueNoCreateComplete);
			}
			
			//查询排队号创建完毕事件处理
			private function queryQueueNoCreateComplete(event:FlexEvent):void{
				queryPanel.phone.setFocus();
				queryPanel.cancel.addEventListener(MouseEvent.CLICK,cancel_clickHandler);
			}
			
			//取消按钮事件处理
			private function cancel_clickHandler(event:MouseEvent):void{
				this.currentState = "working";
			}
			
			//查询排队时间事件处理
			protected function queryWaitTime_clickHandler(event:MouseEvent):void
			{
				this.currentState = "queryWaitTimeByQueueNo";
				queryPanel.addEventListener(FlexEvent.CREATION_COMPLETE,queryWaitTimeCreateComplete);
			}
			
			//查询排队时间创建完毕事件处理
			private function queryWaitTimeCreateComplete(event:FlexEvent):void{
				queryPanel.cancel2.addEventListener(MouseEvent.CLICK,cancel_clickHandler);
			}
			
			//查询面板关闭事件处理
			protected function queryPanel_closeHandler(event:CloseEvent):void
			{
				this.currentState = "working";
			}
			
			
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="start"/>
		<s:State name="loadingBusiness"/>
		<s:State name="working"/>
		<s:State name="closing"/>
		<s:State name="queryQueueNoByPhone"/>
		<s:State name="queryWaitTimeByQueueNo"/>
	</s:states>
	<fx:Declarations>
		<s:CallResponder id="getBusinessListResult"/>
		<queuemachine:QueueMachine id="queueMachine" fault="loadBusinessFaultHander(event)"
								   showBusyCursor="true"/>
	</fx:Declarations>
	
	<s:Image width="1024" height="768" horizontalCenter="0" source="image/1.jpg" verticalCenter="0"/>
	<s:VGroup id="businessContainer" includeIn="start,working" width="60%" height="60%" gap="20"
			  horizontalAlign="center" horizontalCenter="0" textAlign="center"
			  verticalAlign="middle" verticalCenter="0">
		
	</s:VGroup>
	<UI:LoadingProgressBar includeIn="loadingBusiness" width="50%" height="15%" horizontalCenter="0"
						   verticalCenter="0">
	</UI:LoadingProgressBar>
	<s:Panel includeIn="closing" width="50%" height="200" horizontalCenter="0" title="停业时间"
			 verticalCenter="0">
		<s:Label width="80%" height="30%" fontSize="20" horizontalCenter="0"
				 text="当前为停业时间，请在营业时间前来办理业务" textAlign="center" verticalAlign="middle"
				 verticalCenter="0"/>
	</s:Panel>
	<s:VGroup includeIn="working" right="10" bottom="10" width="20%" height="20%" gap="20"
			  horizontalAlign="center" verticalAlign="middle">
		<s:Button id="queryQueueNo" width="80%" height="40%" label="查询排队号"
				  click="queryQueueNo_clickHandler(event)" fontSize="20" fontWeight="bold"/>
		<s:Button id="queryWaitTime" width="80%" height="40%" label="查询排队时间"
				  click="queryWaitTime_clickHandler(event)" fontSize="20" fontWeight="bold"/>
	</s:VGroup>
	<UI:QueryPanel id="queryPanel" includeIn="queryQueueNoByPhone,queryWaitTimeByQueueNo" width="60%"
				   height="40%" horizontalCenter="0" verticalCenter="0"
				   width.queryQueueNoByPhone="50%"
				   close.queryQueueNoByPhone="queryPanel_closeHandler(event)"
				   currentState.queryWaitTimeByQueueNo="queryWaitTime">
	</UI:QueryPanel>
	
</s:WindowedApplication>
